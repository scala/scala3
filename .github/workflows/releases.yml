###################################################################################################
###                                  OFFICIAL RELEASE WORKFLOW                                  ###
### HOW TO USE:                                                                                 ###
###   - THIS WORKFLOW WILL NEED TO BE TRIGGERED MANUALLY                                        ###
###                                                                                             ###
### NOTE:                                                                                       ###
###   - THIS WORKFLOW SHOULD ONLY BE RUN ON STABLE RELEASES                                     ###
###   - IT ASSUMES THAT THE PRE-RELEASE WORKFLOW WAS PREVIOUSLY EXECUTED                        ###
###                                                                                             ###
###################################################################################################

name: Official release of Scala
run-name: Official release of Scala ${{ inputs.version }}

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version to officially release'
        required: true
        type: string

permissions:
  contents: read

jobs:
  publish-sdkman:
    runs-on: [self-hosted, Linux]
    container:
      image: lampepfl/dotty:2021-03-22
      options: --cpu-shares 4096

    env:
      SDKMAN_KEY: ${{ secrets.SDKMAN_KEY }}
      SDKMAN_TOKEN: ${{ secrets.SDKMAN_TOKEN }}

    steps:
      - name: Reset existing repo
        run: |
          git config --global --add safe.directory /__w/dotty/dotty
          git -c "http.https://github.com/.extraheader=" fetch --recurse-submodules=no "https://github.com/lampepfl/dotty" && git reset --hard FETCH_HEAD || true

      - name: Cleanup
        run: .github/workflows/cleanup.sh

      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Publish to SDKMAN
        run: .github/workflows/scripts/publish-sdkman.sh ${{ inputs.version }}

  compute-digest:
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.digest.outputs.digest }}
    steps:
      - name: Compute the SHA256 of scala3-${{ inputs.version }}.zip in GitHub Release
        id: digest
        run: |
          curl -o artifact.zip -L https://github.com/scala/scala3/releases/download/${{ inputs.version }}/scala3-${{ inputs.version }}.zip
          echo "digest=$(sha256sum artifact.zip | cut -d " " -f 1)" >> "$GITHUB_OUTPUT"

  build-chocolatey:
    uses: ./.github/workflows/build-chocolatey.yml
    needs: compute-digest
    with:
      version: ${{ inputs.version }}
      url    : 'https://github.com/scala/scala3/releases/download/${{ inputs.version }}/scala3-${{ inputs.version }}.zip'
      digest : ${{ needs.compute-digest.outputs.digest }}
  test-chocolatey:
    uses: ./.github/workflows/test-chocolatey.yml
    needs: build-chocolatey
    with:
      version     : ${{ inputs.version }}
      java-version: 8
  publish-chocolatey:
    uses: ./.github/workflows/publish-chocolatey.yml
    needs: [ build-chocolatey, test-chocolatey ]
    with:
      version: ${{ inputs.version }}
    secrets:
      API-KEY: ${{ secrets.CHOCOLATEY_KEY }}
