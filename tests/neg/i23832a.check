-- [E120] Naming Error: tests/neg/i23832a.scala:9:8 --------------------------------------------------------------------
9 |  given Special[Option[Int]] = ??? // error
  |        ^
  |        Conflicting definitions:
  |        final lazy given val given_Special_Option: Special[Option[Long]] in object syntax at line 8 and
  |        final lazy given val given_Special_Option: Special[Option[Int]] in object syntax at line 9
  |---------------------------------------------------------------------------------------------------------------------
  | Explanation (enabled by `-explain`)
  |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  |
  | As part of the Scala compilation pipeline every type is reduced to its erased
  | (runtime) form. In this phase, among other transformations, generic parameters
  | disappear and separate parameter-list boundaries are flattened.
  |
  | For example, both `f[T](x: T)(y: String): Unit` and `f(x: Any, z: String): Unit`
  | erase to the same runtime signature `f(x: Object, y: String): Unit`. Note that
  | parameter names are irrelevant.
  |
  | In your code the two declarations
  |
  |   final lazy given val given_Special_Option: Special[Option[Long]]
  |   final lazy given val given_Special_Option: Special[Option[Int]]
  |
  | erase to the identical signature
  |
  |   Special
  |
  | so the compiler cannot keep both: the generated bytecode symbols would collide.
  |
  | To fix this error, you need to disambiguate the two definitions. You can either:
  |
  | 1. Rename one of the definitions, or
  | 2. Keep the same names in source but give one definition a distinct
  |    bytecode-level name via `@targetName`; for example:
  |
  |       @targetName("given_Special_Option_2")
  |       final lazy given val given_Special_Option: Special[Option[Int]]
  |
  | 3. Provide an explicit, unique name to given definitions, since the names
  |    assigned to anonymous givens may clash. For example:
  |
  |       given myGiven: Special[Option[Int]]
  |
  | Choose the `@targetName` argument carefully: it is the name that will be used
  | when calling the method externally, so it should be unique and descriptive.
   ---------------------------------------------------------------------------------------------------------------------
