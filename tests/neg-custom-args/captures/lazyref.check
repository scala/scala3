-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/lazyref.scala:20:28 --------------------------------------
20 |  val ref1c: LazyRef[Int] = ref1 // error
   |                            ^^^^
   |                            Found:    (ref1 : LazyRef[Int]{val elem: () ->{cap1} Int}^{cap1})
   |                            Required: LazyRef[Int]
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/lazyref.scala:22:35 --------------------------------------
22 |  val ref2c: LazyRef[Int]^{cap2} = ref2 // error
   |                                   ^^^^
   |                                   Found:    LazyRef[Int]{val elem: () ->{ref2*} Int}^{ref2}
   |                                   Required: LazyRef[Int]^{cap2}
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/lazyref.scala:24:35 --------------------------------------
24 |  val ref3c: LazyRef[Int]^{ref1} = ref3 // error
   |                                   ^^^^
   |                                   Found:    LazyRef[Int]{val elem: () ->{ref3*} Int}^{ref3}
   |                                   Required: LazyRef[Int]^{ref1}
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/lazyref.scala:30:35 --------------------------------------
30 |  val ref4c: LazyRef[Int]^{cap1} = ref4 // error
   |                                   ^^^^
   |                                   Found:    LazyRef[Int]{val elem: () ->{ref4*} Int}^{ref4}
   |                                   Required: LazyRef[Int]^{cap1}
   |
   | longer explanation available when compiling with `-explain`
-- Error: tests/neg-custom-args/captures/lazyref.scala:8:24 ------------------------------------------------------------
8 |    new LazyRef(() => f(elem())) // error: separation failure
  |                        ^^^^
  |              Separation failure: Illegal access to {LazyRef.this.elem} which is hidden by the previous definition
  |              of value get with type () => T.
  |              This type hides capabilities  {LazyRef.this.elem}
-- Error: tests/neg-custom-args/captures/lazyref.scala:23:13 -----------------------------------------------------------
23 |  val ref3 = ref1.map(g) // error: separation failure
   |             ^^^^
   |             Separation failure: Illegal access to {cap1} which is hidden by the previous definition
   |             of value ref2 with type LazyRef[Int]{val elem: () => Int}^{cap2, ref1}.
   |             This type hides capabilities  {cap1}
-- Error: tests/neg-custom-args/captures/lazyref.scala:26:9 ------------------------------------------------------------
26 |      if cap1 == cap2   // error: separation failure // error: separation failure
   |         ^^^^
   |         Separation failure: Illegal access to {cap1} which is hidden by the previous definition
   |         of value ref3 with type LazyRef[Int]{val elem: () => Int}^{cap2, ref1}.
   |         This type hides capabilities  {ref2*, cap1}
-- Error: tests/neg-custom-args/captures/lazyref.scala:26:17 -----------------------------------------------------------
26 |      if cap1 == cap2   // error: separation failure // error: separation failure
   |                 ^^^^
   |                 Separation failure: Illegal access to {cap2} which is hidden by the previous definition
   |                 of value ref3 with type LazyRef[Int]{val elem: () => Int}^{cap2, ref1}.
   |                 This type hides capabilities  {ref2*, cap1}
-- Error: tests/neg-custom-args/captures/lazyref.scala:27:11 -----------------------------------------------------------
27 |      then ref1 // error: separation failure
   |           ^^^^
   |           Separation failure: Illegal access to {cap1, ref1} which is hidden by the previous definition
   |           of value ref3 with type LazyRef[Int]{val elem: () => Int}^{cap2, ref1}.
   |           This type hides capabilities  {ref2*, cap1}
-- Error: tests/neg-custom-args/captures/lazyref.scala:28:11 -----------------------------------------------------------
28 |      else ref2) // error: separation failure
   |           ^^^^
   |           Separation failure: Illegal access to {cap1, cap2, ref1} which is hidden by the previous definition
   |           of value ref3 with type LazyRef[Int]{val elem: () => Int}^{cap2, ref1}.
   |           This type hides capabilities  {ref2*, cap1}
-- Error: tests/neg-custom-args/captures/lazyref.scala:29:9 ------------------------------------------------------------
29 |    .map(g) // error: separation failure
   |         ^
   |         Separation failure: Illegal access to {cap2} which is hidden by the previous definition
   |         of value ref3 with type LazyRef[Int]{val elem: () => Int}^{cap2, ref1}.
   |         This type hides capabilities  {ref2*, cap1}
