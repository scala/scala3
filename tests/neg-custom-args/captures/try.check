-- Error: tests/neg-custom-args/captures/try.scala:23:28 ---------------------------------------------------------------
23 |  val a = handle[Exception, CanThrow[Exception]] { // error
   |                            ^^^^^^^^^^^^^^^^^^^
   |                            Type variable R of method handle cannot be instantiated to box CT[Exception]^ since
   |                            that type captures the root capability `cap`.
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/try.scala:30:32 ------------------------------------------
30 |    (x: CanThrow[Exception]) => () => raise(new Exception)(using x) // error
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                                Found:    () ->{x} Nothing
   |                                Required: () ->? Nothing
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/try.scala:52:2 -------------------------------------------
47 |val global: () -> Int = handle {
48 |  (x: CanThrow[Exception]) =>
49 |    () =>
50 |      raise(new Exception)(using x)
51 |      22
52 |} {  // error
   |                        ^
   |                        Found:    () ->{x} Int
   |                        Required: () -> Int
53 |  (ex: Exception) => () => 22
54 |}
   |
   | longer explanation available when compiling with `-explain`
-- Error: tests/neg-custom-args/captures/try.scala:35:11 ---------------------------------------------------------------
35 |  val xx = handle {  // error
   |           ^^^^^^
   |           local reference x leaks into outer capture set of type parameter R of method handle
