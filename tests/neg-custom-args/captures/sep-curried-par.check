-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/sep-curried-par.scala:23:32 ------------------------------
23 |  val bar = (p1: () => Unit) => (p2: () ->{p1, cap} Unit) => par(p1, p2) // error, but error message could be better
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                                Found:    (p2: () ->{p1, cap} Unit) ->{p1} Unit
   |                                Required: (() ->'s1 Unit) ->'s2 Unit
   |
   |                                Note that capability p1, defined in method $anonfun
   |                                cannot be included in outer capture set 's2.
   |
   |                                where:    cap is the universal root capability
   |
   | longer explanation available when compiling with `-explain`
-- Error: tests/neg-custom-args/captures/sep-curried-par.scala:6:48 ----------------------------------------------------
6 |def parCurriedBad(p1: () => Unit): (() => Unit) => Unit = // error: consume failure
  |                                   ^^^^^^^^^^^^^^^^^^^^
  |                   Separation failure: method parCurriedBad's result type (() => Unit) => Unit hides parameter p1.
  |                   The parameter needs to be annotated with consume to allow this.
-- Error: tests/neg-custom-args/captures/sep-curried-par.scala:15:6 ----------------------------------------------------
15 |  par(p, p)  // error: separation
   |      ^
   |Separation failure: argument of type  (p : () => Unit)
   |to method par: (p1: () => Unit, p2: () => Unit): Unit
   |corresponds to capture-polymorphic formal parameter p1 of type  () =>² Unit
   |and hides capabilities  {p}.
   |Some of these overlap with the captures of the second argument with type  (p : () => Unit).
   |
   |  Hidden set of current argument        : {p}
   |  Hidden footprint of current argument  : {p}
   |  Capture set of second argument        : {p}
   |  Footprint set of second argument      : {p}
   |  The two sets overlap at               : {p}
   |
   |where:    =>  refers to a fresh root capability in the type of value p
   |          =>² refers to a fresh root capability created in method test when checking argument to parameter p1 of method par
-- Error: tests/neg-custom-args/captures/sep-curried-par.scala:18:16 ---------------------------------------------------
18 |  parCurried(p)(p) // error: consume failure
   |                ^
   |                Separation failure: Illegal access to (p : () => Unit), which was passed to a
   |                consume parameter or was used as a prefix to a consume method on line 18
   |                and therefore is no longer available.
   |
   |                where:    => refers to a fresh root capability in the type of value p
-- Error: tests/neg-custom-args/captures/sep-curried-par.scala:21:9 ----------------------------------------------------
21 |  foo(c)(c) // error: separation
   |         ^
   |Separation failure: argument of type  (c : () => Unit)
   |to a function of type (() => Unit) ->{c} Unit
   |corresponds to capture-polymorphic formal parameter v1 of type  () =>² Unit
   |and hides capabilities  {c}.
   |Some of these overlap with the captures of the function prefix.
   |
   |  Hidden set of current argument        : {c}
   |  Hidden footprint of current argument  : {c}
   |  Capture set of function prefix        : {c}
   |  Footprint set of function prefix      : {c}
   |  The two sets overlap at               : {c}
   |
   |where:    =>  refers to a fresh root capability in the type of parameter c
   |          =>² refers to a fresh root capability created in method test when checking argument to parameter v1 of method apply
