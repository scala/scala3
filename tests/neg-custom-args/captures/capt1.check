-- Error: tests/neg-custom-args/captures/capt1.scala:6:11 --------------------------------------------------------------
6 |  () => if x == null then y else y  // error
  |           ^
  |           reference (x : C^) is not included in the allowed capture set {}
  |           of an enclosing function literal with expected type () -> C
-- Error: tests/neg-custom-args/captures/capt1.scala:9:11 --------------------------------------------------------------
9 |  () => if x == null then y else y  // error
  |           ^
  |           reference (x : C^) is not included in the allowed capture set {}
  |           of an enclosing function literal with expected type Matchable
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/capt1.scala:16:2 -----------------------------------------
16 |  def f(y: Int) = if x == null then y else y  // error
   |  ^
   |  Found:    (y: Int) ->{x} Int
   |  Required: Matchable
17 |  f
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/capt1.scala:23:2 -----------------------------------------
23 |  class F(y: Int) extends A:   // error
   |  ^
   |  Found:    A^{x}
   |  Required: A
24 |    def m() = if x == null then y else y
25 |  F(22)
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/capt1.scala:28:2 -----------------------------------------
28 |  new A: // error
   |  ^
   |  Found:    A^{x}
   |  Required: A
29 |    def m() = if x == null then y else y
   |
   | longer explanation available when compiling with `-explain`
-- Error: tests/neg-custom-args/captures/capt1.scala:34:16 -------------------------------------------------------------
34 |  val z2 = h[() -> Cap](() => x) // error // error
   |             ^^^^^^^^^
   |             Type variable X of method h cannot be instantiated to () -> box C^ since
   |             the part box C^ of that type captures the root capability `cap`.
-- Error: tests/neg-custom-args/captures/capt1.scala:34:30 -------------------------------------------------------------
34 |  val z2 = h[() -> Cap](() => x) // error // error
   |                              ^
   |                              reference (x : C^) is not included in the allowed capture set {}
   |                              of an enclosing function literal with expected type () -> box C^
-- Error: tests/neg-custom-args/captures/capt1.scala:36:13 -------------------------------------------------------------
36 |  val z3 = h[(() -> Cap) @retains(x)](() => x)(() => C())  // error
   |             ^^^^^^^^^^^^^^^^^^^^^^^
   |             Type variable X of method h cannot be instantiated to box () ->{x} Cap since
   |             the part Cap of that type captures the root capability `cap`.
