-- Error: tests/neg-custom-args/captures/i21401.scala:13:14 ------------------------------------------------------------
13 |    op1(Boxed[IO^](x)) // error
   |              ^^^
   |              Type variable T of object Boxed cannot be instantiated to box IO^ since
   |              that type captures the root capability `cap`.
-- Error: tests/neg-custom-args/captures/i21401.scala:15:18 ------------------------------------------------------------
15 |  val a = usingIO[IO^](x => x) // error
   |                  ^^^
   |                  Type variable R of method usingIO cannot be instantiated to box IO^ since
   |                  that type captures the root capability `cap`.
-- Error: tests/neg-custom-args/captures/i21401.scala:16:66 ------------------------------------------------------------
16 |  val leaked: [R, X <: Boxed[IO^] -> R] -> (op: X) -> R = usingIO[Res](mkRes) // error
   |                                                                  ^^^
   |                                           Type variable R of method usingIO cannot be instantiated to Res since
   |                                           the part box IO^ of that type captures the root capability `cap`.
-- Error: tests/neg-custom-args/captures/i21401.scala:17:29 ------------------------------------------------------------
17 |  val x: Boxed[IO^] = leaked[Boxed[IO^], Boxed[IO^] -> Boxed[IO^]](x => x) // error // error
   |                             ^^^^^^^^^^
   |                             Type variable R of value leaked cannot be instantiated to Boxed[box IO^] since
   |                             the part box IO^ of that type captures the root capability `cap`.
-- Error: tests/neg-custom-args/captures/i21401.scala:17:52 ------------------------------------------------------------
17 |  val x: Boxed[IO^] = leaked[Boxed[IO^], Boxed[IO^] -> Boxed[IO^]](x => x) // error // error
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^
   |Type variable X of value leaked cannot be instantiated to Boxed[box IO^] -> (ex$18: caps.Exists) -> Boxed[box IO^{ex$18}] since
   |the part box IO^{ex$18} of that type captures the root capability `cap`.
-- Error: tests/neg-custom-args/captures/i21401.scala:18:21 ------------------------------------------------------------
18 |  val y: IO^{x*} = x.unbox // error
   |                   ^^^^^^^
   |                   Local reach capability x* leaks into capture scope of method test2
