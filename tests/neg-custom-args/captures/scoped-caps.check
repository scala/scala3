-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:7:20 -----------------------------------
7 |  val g: A^ -> B^ = f // error
  |                    ^
  |                 Found:    (f : (x: A^) -> B^²)
  |                 Required: A^ -> B^³
  |
  |                 Note that capability cap is not included in capture set {cap²}
  |                 because cap is not visible from cap² in value g.
  |
  |                 where:    ^ and cap   refer to the universal root capability
  |                           ^²          refers to a root capability associated with the result type of (x: A^): B^²
  |                           ^³ and cap² refer to a fresh root capability in the type of value g
  |
  | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:9:25 -----------------------------------
9 |  val _: (x: A^) -> B^ = g // error
  |                         ^
  |                   Found:    A^ -> B^{g*}
  |                   Required: (x: A^) -> B^²
  |
  |                   Note that capability g* is not included in capture set {cap}.
  |
  |                   where:    ^ and cap refer to the universal root capability
  |                             ^²        refers to a root capability associated with the result type of (x: A^): B^²
  |
  | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:10:20 ----------------------------------
10 |  val _: A^ -> B^ = f // error
   |                    ^
   |               Found:    (f : (x: A^) -> B^²)
   |               Required: A^ -> B^³
   |
   |               Note that capability cap is not included in capture set {cap²}
   |               because cap is not visible from cap² in value _$3.
   |
   |               where:    ^ and cap   refer to the universal root capability
   |                         ^²          refers to a root capability associated with the result type of (x: A^): B^²
   |                         ^³ and cap² refer to a fresh root capability in the type of value _$3
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:12:20 ----------------------------------
12 |  val _: A^ -> B^ = x => g(x)      // error: g is no longer pure, since it contains the ^ of B
   |                    ^^^^^^^^^
   |                Found:    (x: A^) ->'s1 B^²
   |                Required: A^ -> B^³
   |
   |                Note that capability cap is not included in capture set {cap²}
   |                because cap is not visible from cap² in value _$5.
   |
   |                where:    ^           refers to the universal root capability
   |                          ^² and cap  refer to a root capability associated with the result type of (x: A^): B^²
   |                          ^³ and cap² refer to a fresh root capability in the type of value _$5
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:16:24 ----------------------------------
16 |  val _: (x: S) -> B^ = h          // error: direct conversion fails
   |                        ^
   |                 Found:    S^ -> B^{h*}
   |                 Required: (x: S^) -> B^²
   |
   |                 Note that capability h* is not included in capture set {cap}.
   |
   |                 where:    ^ and cap refer to the universal root capability
   |                           ^²        refers to a root capability associated with the result type of (x: S^): B^²
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:26:19 ----------------------------------
26 |  val _: S -> B^ = j               // error
   |                   ^
   |               Found:    (j : (x: S) -> B^)
   |               Required: S^² -> B^³
   |
   |               Note that capability cap is not included in capture set {cap²}
   |               because cap is not visible from cap² in value _$13.
   |
   |               where:    ^           refers to a root capability associated with the result type of (x: S^²): B^
   |                         ^² and cap  refer to the universal root capability
   |                         ^³ and cap² refer to a fresh root capability in the type of value _$13
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:27:25 ----------------------------------
27 |  val _: S -> B^ = x => j(x)       // error
   |                        ^^^^
   |Found:    B^
   |Required: B^²
   |
   |Note that capability cap is not included in capture set {cap²}
   |because cap in enclosing function is not visible from cap² in value _$14.
   |
   |where:    ^ and cap   refer to a fresh root capability created in anonymous function of type (x: S): B^³ when instantiating method apply's type (x: S^³): B^⁴
   |          ^² and cap² refer to a fresh root capability in the type of value _$14
   |
   | longer explanation available when compiling with `-explain`
