-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:7:20 -----------------------------------
7 |  val g: A^ -> B^ = f // error
  |                    ^
  |                    Found:    (f : (x: A^) -> B^²)
  |                    Required: A^ -> B^³
  |
  |                    where:    ^  refers to the universal root capability
  |                              ^² refers to a root capability associated with the result type of (x: A^): B^²
  |                              ^³ refers to a fresh root capability in the type of value g
  |
  |                    Note that capability <cap of (x: A^): B^> is not included in capture set {cap}
  |                    because <cap of (x: A^): B^> is not visible from cap in value g.
  |
  | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:9:25 -----------------------------------
9 |  val _: (x: A^) -> B^ = g // error
  |                         ^
  |                         Found:    A^ -> B^{g*}
  |                         Required: (x: A^) -> B^²
  |
  |                         where:    ^  refers to the universal root capability
  |                                   ^² refers to a root capability associated with the result type of (x: A^): B^²
  |
  |                         Note that capability g* is not included in capture set {<cap of (x: A^): B^>}.
  |
  | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:10:20 ----------------------------------
10 |  val _: A^ -> B^ = f // error
   |                    ^
   |                    Found:    (f : (x: A^) -> B^²)
   |                    Required: A^ -> B^³
   |
   |                    where:    ^  refers to the universal root capability
   |                              ^² refers to a root capability associated with the result type of (x: A^): B^²
   |                              ^³ refers to a fresh root capability in the type of value _$3
   |
   |                    Note that capability <cap of (x: A^): B^> is not included in capture set {cap}
   |                    because <cap of (x: A^): B^> is not visible from cap in value _$3.
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:12:20 ----------------------------------
12 |  val _: A^ -> B^ = x => g(x)      // error: g is no longer pure, since it contains the ^ of B
   |                    ^^^^^^^^^
   |                    Found:    (x: A^) ->{g} B^²
   |                    Required: A^ -> B^³
   |
   |                    where:    ^  refers to the universal root capability
   |                              ^² refers to a root capability associated with the result type of (x: A^): B^²
   |                              ^³ refers to a fresh root capability in the type of value _$5
   |
   |                    Note that capability (g : A^ -> B^) is not included in capture set {}.
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:16:24 ----------------------------------
16 |  val _: (x: S) -> B^ = h          // error: direct conversion fails
   |                        ^
   |                        Found:    S^ -> B^{h*}
   |                        Required: (x: S^) -> B^²
   |
   |                        where:    ^  refers to the universal root capability
   |                                  ^² refers to a root capability associated with the result type of (x: S^): B^²
   |
   |                        Note that capability h* is not included in capture set {<cap of (x: S^): B^>}.
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:17:24 ----------------------------------
17 |  val _: (x: S) -> B^ = (x: S) => h(x)  // error: eta expansion fails
   |                        ^^^^^^^^^^^^^^
   |                        Found:    (x: S^) ->{h} B^²
   |                        Required: (x: S^) -> B^³
   |
   |                        where:    ^  refers to the universal root capability
   |                                  ^² refers to a root capability associated with the result type of (x: S^): B^²
   |                                  ^³ refers to a root capability associated with the result type of (x: S^): B^³
   |
   |                        Note that capability (h : S -> B^) is not included in capture set {}.
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:21:23 ----------------------------------
21 |  val _: (x: S) -> S = (x: S) => h2(x)  // error: eta conversion fails since `h2` is now impure (result type S is a capability)
   |                       ^^^^^^^^^^^^^^^
   |                       Found:    (x: S^) ->{h2} S^²
   |                       Required: (x: S^) -> S^³
   |
   |                       where:    ^  refers to the universal root capability
   |                                 ^² refers to a root capability associated with the result type of (x: S^): S^²
   |                                 ^³ refers to a root capability associated with the result type of (x: S^): S^³
   |
   |                       Note that capability (h2 : S -> S) is not included in capture set {}.
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:27:19 ----------------------------------
27 |  val _: S -> B^ = j               // error
   |                   ^
   |                   Found:    (j : (x: S) -> B^)
   |                   Required: S^² -> B^³
   |
   |                   where:    ^  refers to a root capability associated with the result type of (x: S^²): B^
   |                             ^² refers to the universal root capability
   |                             ^³ refers to a fresh root capability in the type of value _$14
   |
   |                   Note that capability <cap of (x: S^): B^> is not included in capture set {cap}
   |                   because <cap of (x: S^): B^> is not visible from cap in value _$14.
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:28:19 ----------------------------------
28 |  val _: S -> B^ = x => j(x)       // error
   |                   ^^^^^^^^^
   |                   Found:    (x: S^) ->? B^²
   |                   Required: S^ -> B^³
   |
   |                   where:    ^  refers to the universal root capability
   |                             ^² refers to a root capability associated with the result type of (x: S^): B^²
   |                             ^³ refers to a fresh root capability in the type of value _$15
   |
   |                   Note that capability <cap of (x: S^): B^> is not included in capture set {cap}
   |                   because <cap of (x: S^): B^> is not visible from cap in value _$15.
   |
   | longer explanation available when compiling with `-explain`
