-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/i21614.scala:12:33 ---------------------------------------
12 |  files.map((f: F) => new Logger(f)) // error, Q: can we make this pass (see #19076)?
   |                                 ^
   |Found:    (f : F)
   |Required: File^
   |
   |where:    ^ refers to a fresh root capability classified as SharedCapability created in anonymous function of type (fÂ²: F): Logger when checking argument to parameter f of constructor Logger
   |
   |Note that capability cap is not included in capture set {cap}.
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/i21614.scala:15:12 ---------------------------------------
15 |  files.map(new Logger(_)) // error, Q: can we improve the error message?
   |            ^^^^^^^^^^^^^
   |Found:    (_$1: File^?) ->{C} Logger{val f: File^{_$1}}^{cap.rd, _$1}
   |Required: File^{C} => Logger{val f: File^?}^?
   |
   |where:    =>  refers to a fresh root capability created in method mkLoggers2 when checking argument to parameter f of method map
   |          cap is a root capability associated with the result type of (_$1: File^?): Logger{val f: File^{_$1}}^{cap.rd, _$1}
   |
   |Note that capability C is not classified as trait SharedCapability, therefore it
   |cannot be included in capture set ? of parameter _$1 of SharedCapability elements.
   |
   | longer explanation available when compiling with `-explain`
