-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/i15923.scala:12:21 ---------------------------------------
12 |  val leak = withCap(cap => mkId(cap)) // error
   |                     ^^^^^^^^^^^^^^^^
   |Found:    (lcap: scala.caps.Capability^{cap.rd}) ?->? Cap^? ->? Id[Cap^?]^?
   |Required: (lcap: scala.caps.Capability^{cap.rd}) ?-> Cap^{lcap} => Id[Cap^?]^?
   |
   |where:    =>  refers to a root capability associated with the result type of (using lcap: scala.caps.Capability^{cap.rd}): Cap^{lcap} => Id[Cap^?]^?
   |          cap is the universal root capability
   |
   |Note that reference <cap of (x$0: Cap^?): Id[Cap^?]^?>.rd
   |cannot be included in outer capture set ?
   |
   | longer explanation available when compiling with `-explain`
-- Warning: tests/neg-custom-args/captures/i15923.scala:21:56 ----------------------------------------------------------
21 |    def withCap[X](op: (lcap: caps.Capability) ?-> Cap^{lcap} => X): X = {
   |                                                        ^^^^
   |                                                     redundant capture: test2.Cap already accounts for lcap.type
-- Warning: tests/neg-custom-args/captures/i15923.scala:6:54 -----------------------------------------------------------
6 |  def withCap[X](op: (lcap: caps.Capability) ?-> Cap^{lcap} => X): X = {
  |                                                      ^^^^
  |                                                      redundant capture: Cap already accounts for lcap.type
