-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/vars.scala:24:8 ------------------------------------------
24 |    a = x => g(x)      // error
   |        ^^^^^^^^^
   |        Found:    (x: String) ->{cap3} String
   |        Required: String ->{cap1} String
   |        Note that capability (cap3 : CC^), defined in method scope
   |        cannot be included in outer capture set {cap1} of variable a.
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/vars.scala:25:8 ------------------------------------------
25 |    a = g      // error
   |        ^
   |        Found:    (x: String) ->{cap3} String
   |        Required: String ->{cap1} String
   |        Note that capability (cap3 : CC^), defined in method scope
   |        cannot be included in outer capture set {cap1} of variable a.
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/vars.scala:27:12 -----------------------------------------
27 |    b = List(g) // error
   |        ^^^^^^^
   |        Found:    List[String ->{cap3} String]
   |        Required: List[String ->{cap1, cap2} String]
   |        Note that capability (cap3 : CC^) is not included in capture set {cap1, cap2}.
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/vars.scala:36:8 ------------------------------------------
36 |  local { cap3 => // error
   |        ^
   |Found:    (cap3: CC^) ->? String => String
   |Required: CC^ -> String =>² String
   |
   |where:    =>  refers to a root capability associated with the result type of (cap3: CC^): String => String
   |          =>² refers to a fresh root capability created in method test of parameter parameter cap3² of method $anonfun
   |          ^   refers to the universal root capability
   |
   |Note that capability <cap of (cap3: CC^): String => String>
   |cannot be included in outer capture set {cap}.
37 |    def g(x: String): String = if cap3 == cap3 then "" else "a"
38 |    g
39 |  }
   |
   | longer explanation available when compiling with `-explain`
