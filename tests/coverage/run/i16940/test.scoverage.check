# Coverage data, format version: 3.0
# Statement data:
# - id
# - source path
# - package name
# - class name
# - class type (Class, Object or Trait)
# - full class name
# - method name
# - start offset
# - end offset
# - line number
# - symbol name
# - tree name
# - is branch
# - invocations count
# - is ignored
# - description (can be multi-line)
# '' sign
# ------------------------------------------
0
i16940/i16940.scala
<empty>
Test
Object
<empty>.Test
<init>
353
552
19
result
Apply
false
0
false
Await.result(\n    Future.sequence(Seq(brokenSynchronizedBlock(false), brokenSynchronizedBlock(true)))\n      .map { result =>\n        println(test)\n        assert(test == 2)\n      },\n    3.seconds\n  )

1
i16940/i16940.scala
<empty>
Test
Object
<empty>.Test
<init>
371
533
20
map
Apply
false
0
false
Future.sequence(Seq(brokenSynchronizedBlock(false), brokenSynchronizedBlock(true)))\n      .map { result =>\n        println(test)\n        assert(test == 2)\n      }

2
i16940/i16940.scala
<empty>
Test
Object
<empty>.Test
<init>
387
453
20
apply
Apply
false
0
false
Seq(brokenSynchronizedBlock(false), brokenSynchronizedBlock(true))

3
i16940/i16940.scala
<empty>
Test
Object
<empty>.Test
<init>
391
421
20
brokenSynchronizedBlock
Apply
false
0
false
brokenSynchronizedBlock(false)

4
i16940/i16940.scala
<empty>
Test
Object
<empty>.Test
<init>
423
452
20
brokenSynchronizedBlock
Apply
false
0
false
brokenSynchronizedBlock(true)

5
i16940/i16940.scala
<empty>
Test
Object
<empty>.Test
$anonfun
486
499
22
println
Apply
false
0
false
println(test)

6
i16940/i16940.scala
<empty>
Test
Object
<empty>.Test
<init>
539
540
25
DurationInt
Apply
false
0
false
3

7
i16940/i16940.scala
<empty>
Test
Object
<empty>.Test
<init>
539
548
25
seconds
Select
false
0
false
3.seconds

8
i16940/i16940.scala
<empty>
i16940$package
Object
<empty>.i16940$package
<init>
125
126
5
<none>
Literal
false
0
false
0

9
i16940/i16940.scala
<empty>
i16940$package
Object
<empty>.i16940$package
brokenSynchronizedBlock
189
323
7
apply
Apply
false
0
false
Future {\n  if (option) {\n    Thread.sleep(500)\n  }\n  synchronized {\n    val tmp = test\n    Thread.sleep(1000)\n    test = tmp + 1\n  }\n}

10
i16940/i16940.scala
<empty>
i16940$package
Object
<empty>.i16940$package
brokenSynchronizedBlock
218
235
9
sleep
Apply
false
0
false
Thread.sleep(500)

11
i16940/i16940.scala
<empty>
i16940$package
Object
<empty>.i16940$package
brokenSynchronizedBlock
212
239
8
<none>
Block
true
0
false
{\n    Thread.sleep(500)\n  }

12
i16940/i16940.scala
<empty>
i16940$package
Object
<empty>.i16940$package
brokenSynchronizedBlock
239
239
10
<none>
Literal
true
0
false


13
i16940/i16940.scala
<empty>
i16940$package
Object
<empty>.i16940$package
brokenSynchronizedBlock
242
321
11
synchronized
Apply
false
0
false
synchronized {\n    val tmp = test\n    Thread.sleep(1000)\n    test = tmp + 1\n  }

14
i16940/i16940.scala
<empty>
i16940$package
Object
<empty>.i16940$package
brokenSynchronizedBlock
280
298
13
sleep
Apply
false
0
false
Thread.sleep(1000)

15
i16940/i16940.scala
<empty>
i16940$package
Object
<empty>.i16940$package
brokenSynchronizedBlock
310
317
14
+
Apply
false
0
false
tmp + 1

16
i16940/i16940.scala
<empty>
i16940$package
Object
<empty>.i16940$package
brokenSynchronizedBlock
128
155
7
brokenSynchronizedBlock
DefDef
false
0
false
def brokenSynchronizedBlock

