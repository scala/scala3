# Coverage data, format version: 3.0
# Statement data:
# - id
# - source path
# - package name
# - class name
# - class type (Class, Object or Trait)
# - full class name
# - method name
# - start offset
# - end offset
# - line number
# - symbol name
# - tree name
# - is branch
# - invocations count
# - is ignored
# - description (can be multi-line)
# '' sign
# ------------------------------------------
0
type-apply/test.scala
<empty>
test$package
Object
<empty>.test$package
Test
163
201
5
println
Apply
false
0
false
println(List(1,2,3).map(a => List(a)))

1
type-apply/test.scala
<empty>
test$package
Object
<empty>.test$package
Test
171
200
5
map
Apply
false
0
false
List(1,2,3).map(a => List(a))

2
type-apply/test.scala
<empty>
test$package
Object
<empty>.test$package
Test
176
177
5
<none>
Literal
false
0
false
1

3
type-apply/test.scala
<empty>
test$package
Object
<empty>.test$package
Test
178
179
5
<none>
Literal
false
0
false
2

4
type-apply/test.scala
<empty>
test$package
Object
<empty>.test$package
Test
180
181
5
<none>
Literal
false
0
false
3

5
type-apply/test.scala
<empty>
test$package
Object
<empty>.test$package
$anonfun
192
199
5
apply
Apply
false
0
false
List(a)

6
type-apply/test.scala
<empty>
test$package
Object
<empty>.test$package
Test
0
14
2
Test
DefDef
false
0
false
@main\ndef Test

